import telebot
import socket
import pyautogui
import platform
import cv2
import os
import subprocess
import ctypes
import requests
import pytube
import random
from wakeonlan import send_magic_packet
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –æ—Ç BotFather
TOKEN = '7482583188:AAEm8k_3W4wJA6C5IrzfYt4uOT_0FwVFBUo'
# –¢–≤–æ–π Telegram ID (—É–∑–Ω–∞–π —á–µ—Ä–µ–∑ @userinfobot)
ADMIN_ID = '1447911438'
# ID –≥—Ä—É–ø–ø—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
GROUP_ID = '-1002571744053'

bot = telebot.TeleBot(TOKEN)
menu_message_id = None  # –•—Ä–∞–Ω–∏–º ID —Å–æ–æ–±—â–µ–Ω–∏—è —Å –º–µ–Ω—é

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
def is_authorized(user):
    return str(user.id) == ADMIN_ID

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ü–ö
def is_pc_available():
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ü–ö —á–µ—Ä–µ–∑ –ø—Ä–æ—Å—Ç–æ–π ping (–∑–∞–º–µ–Ω–∏ 'localhost' –Ω–∞ IP —Ç–≤–æ–µ–≥–æ –ü–ö, –µ—Å–ª–∏ –±–æ—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ)
        result = subprocess.run('ping -n 1 localhost', shell=True, capture_output=True, text=True, creationflags=subprocess.CREATE_NO_WINDOW)
        return result.returncode == 0
    except:
        return False

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏
def get_main_menu():
    markup = InlineKeyboardMarkup(row_width=2)
    btn_ip = InlineKeyboardButton('üåê Get IP', callback_data='cmd_ip')
    btn_screenshot = InlineKeyboardButton('üì∏ Screenshot', callback_data='cmd_screenshot')
    btn_sysinfo = InlineKeyboardButton('üíª Sys Info', callback_data='cmd_sysinfo')
    btn_webcam = InlineKeyboardButton('üì∑ Webcam', callback_data='cmd_webcam')
    btn_shutdown = InlineKeyboardButton('‚èª Shutdown', callback_data='cmd_shutdown')
    btn_wol = InlineKeyboardButton('üîå Wake-on-LAN', callback_data='cmd_wol')
    btn_cmd = InlineKeyboardButton('üñ•Ô∏è CMD', callback_data='cmd_cmd')
    btn_wallpaper = InlineKeyboardButton('üñºÔ∏è Wallpaper', callback_data='cmd_wallpaper')
    btn_open = InlineKeyboardButton('üåê Open URL', callback_data='cmd_open')
    btn_play = InlineKeyboardButton('üé• Play Video', callback_data='cmd_play')
    btn_dice = InlineKeyboardButton('üé≤ Dice', callback_data='cmd_dice')
    btn_help = InlineKeyboardButton('‚ùì Help', callback_data='cmd_help')
    markup.add(btn_ip, btn_screenshot, btn_sysinfo, btn_webcam, btn_shutdown, btn_wol, btn_cmd, btn_wallpaper, btn_open, btn_play, btn_dice, btn_help)
    return markup

# –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
def get_back_button():
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton('üîô –ù–∞–∑–∞–¥', callback_data='cmd_back'))
    return markup

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–µ–Ω—é
def update_menu(chat_id, message_id=None):
    global menu_message_id
    text = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–º."
    try:
        if message_id:
            bot.edit_message_text(text, chat_id=chat_id, message_id=message_id, reply_markup=get_main_menu(), parse_mode='HTML')
            menu_message_id = message_id
        else:
            sent_message = bot.send_message(chat_id, text, reply_markup=get_main_menu(), parse_mode='HTML')
            menu_message_id = sent_message.message_id
    except Exception as e:
        sent_message = bot.send_message(chat_id, text, reply_markup=get_main_menu(), parse_mode='HTML')
        menu_message_id = sent_message.message_id

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫–æ–º–∞–Ω–¥
def get_ip():
    if not is_pc_available():
        bot.send_message(GROUP_ID, "‚ö†Ô∏è –ü–ö –≤—ã–∫–ª—é—á–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–∫–ª—é—á–∏—Ç—å —á–µ—Ä–µ–∑ /wol.")
        return
    ip = socket.gethostbyname(socket.gethostname())
    bot.send_message(GROUP_ID, f"üåê <b>IP-–∞–¥—Ä–µ—Å:</b> {ip}", parse_mode='HTML')

def take_screenshot():
    if not is_pc_available():
        bot.send_message(GROUP_ID, "‚ö†Ô∏è –ü–ö –≤—ã–∫–ª—é—á–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–∫–ª—é—á–∏—Ç—å —á–µ—Ä–µ–∑ /wol.")
        return
    screenshot = pyautogui.screenshot()
    screenshot.save('screenshot.png')
    bot.send_photo(GROUP_ID, open('screenshot.png', 'rb'), caption="üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–¥–µ–ª–∞–Ω")
    os.remove('screenshot.png')

def get_sysinfo():
    if not is_pc_available():
        bot.send_message(GROUP_ID, "‚ö†Ô∏è –ü–ö –≤—ã–∫–ª—é—á–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–∫–ª—é—á–∏—Ç—å —á–µ—Ä–µ–∑ /wol.")
        return
    sysinfo = f"""
üíª <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ</b>
‚Ä¢ <b>–°–∏—Å—Ç–µ–º–∞:</b> {platform.system()}
‚Ä¢ <b>–ò–º—è —É–∑–ª–∞:</b> {platform.node()}
‚Ä¢ <b>–†–µ–ª–∏–∑:</b> {platform.release()}
‚Ä¢ <b>–í–µ—Ä—Å–∏—è:</b> {platform.version()}
‚Ä¢ <b>–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞:</b> {platform.machine()}
‚Ä¢ <b>–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä:</b> {platform.processor()}
"""
    bot.send_message(GROUP_ID, sysinfo, parse_mode='HTML')

def take_webcam_screenshot():
    if not is_pc_available():
        bot.send_message(GROUP_ID, "‚ö†Ô∏è –ü–ö –≤—ã–∫–ª—é—á–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–∫–ª—é—á–∏—Ç—å —á–µ—Ä–µ–∑ /wol.")
        return
    cap = cv2.VideoCapture(0)
    if not cap.isOpened():
        bot.send_message(GROUP_ID, "üì∑ –í–µ–±-–∫–∞–º–µ—Ä–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.")
        return
    ret, frame = cap.read()
    if ret:
        cv2.imwrite('webcam.png', frame)
        bot.send_photo(GROUP_ID, open('webcam.png', 'rb'), caption="üì∑ –°–Ω–∏–º–æ–∫ —Å –≤–µ–±-–∫–∞–º–µ—Ä—ã")
        os.remove('webcam.png')
    else:
        bot.send_message(GROUP_ID, "üì∑ –ù–µ —É–¥–∞–ª–æ—Å—å —Å–¥–µ–ª–∞—Ç—å —Å–Ω–∏–º–æ–∫.")
    cap.release()

def shutdown_computer():
    if not is_pc_available():
        bot.send_message(GROUP_ID, "‚ö†Ô∏è –ü–ö —É–∂–µ –≤—ã–∫–ª—é—á–µ–Ω.")
        return
    if platform.system() == 'Windows':
        os.system("shutdown /s /t 0")
    elif platform.system() == 'Linux':
        os.system("shutdown now")
    bot.send_message(GROUP_ID, "‚èª –ö–æ–º–ø—å—é—Ç–µ—Ä –≤—ã–∫–ª—é—á–∞–µ—Ç—Å—è.")

def wake_on_lan():
    mac_address = '5A:57:F7:C7:D7:0A'
    send_magic_packet(mac_address)
    bot.send_message(GROUP_ID, "üîå –û—Ç–ø—Ä–∞–≤–ª–µ–Ω —Å–∏–≥–Ω–∞–ª Wake-on-LAN.")

def execute_cmd(command):
    if not is_pc_available():
        bot.send_message(GROUP_ID, "‚ö†Ô∏è –ü–ö –≤—ã–∫–ª—é—á–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–∫–ª—é—á–∏—Ç—å —á–µ—Ä–µ–∑ /wol.")
        return
    try:
        result = subprocess.run(command, shell=True, capture_output=True, text=True, creationflags=subprocess.CREATE_NO_WINDOW)
        output = result.stdout if result.stdout else result.stderr
        bot.send_message(GROUP_ID, f"üñ•Ô∏è <b>–†–µ–∑—É–ª—å—Ç–∞—Ç –∫–æ–º–∞–Ω–¥—ã:</b>\n<pre>{output}</pre>", parse_mode='HTML')
    except Exception as e:
        bot.send_message(GROUP_ID, f"üñ•Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {e}")

def set_wallpaper_from_url(url):
    try:
        response = requests.get(url)
        if response.status_code == 200:
            with open('wallpaper.jpg', 'wb') as f:
                f.write(response.content)
            ctypes.windll.user32.SystemParametersInfoW(20, 0, os.path.abspath('wallpaper.jpg'), 3)
            bot.send_message(GROUP_ID, "üñºÔ∏è –û–±–æ–∏ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!")
            os.remove('wallpaper.jpg')
        else:
            bot.send_message(GROUP_ID, "üñºÔ∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.")
    except Exception as e:
        bot.send_message(GROUP_ID, f"üñºÔ∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –æ–±–æ–µ–≤: {e}")

def set_wallpaper_from_file(file_path):
    try:
        ctypes.windll.user32.SystemParametersInfoW(20, 0, os.path.abspath(file_path), 3)
        bot.send_message(GROUP_ID, "üñºÔ∏è –û–±–æ–∏ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!")
        os.remove(file_path)
    except Exception as e:
        bot.send_message(GROUP_ID, f"üñºÔ∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –æ–±–æ–µ–≤: {e}")

def open_url(url):
    if not is_pc_available():
        bot.send_message(GROUP_ID, "‚ö†Ô∏è –ü–ö –≤—ã–∫–ª—é—á–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–∫–ª—é—á–∏—Ç—å —á–µ—Ä–µ–∑ /wol.")
        return
    try:
        import webbrowser
        webbrowser.open(url)
        bot.send_message(GROUP_ID, f"üåê URL –æ—Ç–∫—Ä—ã—Ç: {url}")
    except Exception as e:
        bot.send_message(GROUP_ID, f"üåê –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ URL: {e}")

def play_video(url):
    if not is_pc_available():
        bot.send_message(GROUP_ID, "‚ö†Ô∏è –ü–ö –≤—ã–∫–ª—é—á–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–∫–ª—é—á–∏—Ç—å —á–µ—Ä–µ–∑ /wol.")
        return
    try:
        yt = pytube.YouTube(url)
        stream = yt.streams.filter(progressive=True, file_extension='mp4').first()
        stream.download(filename='video.mp4')
        os.startfile('video.mp4')
        bot.send_message(GROUP_ID, f"üé• –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –≤–∏–¥–µ–æ: {yt.title}")
    except Exception as e:
        bot.send_message(GROUP_ID, f"üé• –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–∏ –≤–∏–¥–µ–æ: {e}")

def roll_dice():
    if not is_pc_available():
        bot.send_message(GROUP_ID, "‚ö†Ô∏è –ü–ö –≤—ã–∫–ª—é—á–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–∫–ª—é—á–∏—Ç—å —á–µ—Ä–µ–∑ /wol.")
        return
    result = random.randint(1, 6)
    bot.send_message(GROUP_ID, f"üé≤ –ë—Ä–æ—Å–∞—é –∫—É–±–∏–∫... –†–µ–∑—É–ª—å—Ç–∞—Ç: **{result}**", parse_mode='HTML')

def send_help():
    help_text = """
–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
üåê /ip - –ü–æ–ª—É—á–∏—Ç—å IP-–∞–¥—Ä–µ—Å
üì∏ /screenshot - –°–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç
üíª /sysinfo - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
üì∑ /webcam - –°–Ω–∏–º–æ–∫ —Å –≤–µ–±-–∫–∞–º–µ—Ä—ã
‚èª /shutdown - –í—ã–∫–ª—é—á–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä
üîå /wol - –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–∏–≥–Ω–∞–ª Wake-on-LAN
üñ•Ô∏è /cmd [–∫–æ–º–∞–Ω–¥–∞] - –í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –≤ –∫–æ–Ω—Å–æ–ª–∏
üñºÔ∏è /wallpaper [URL] - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–±–æ–∏ —á–µ—Ä–µ–∑ URL –∏–ª–∏ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
üåê /open [URL] - –û—Ç–∫—Ä—ã—Ç—å URL
üé• /play [URL] - –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –≤–∏–¥–µ–æ
üé≤ /dice - –ë—Ä–æ—Å–∏—Ç—å –∫—É–±–∏–∫
"""
    bot.send_message(GROUP_ID, help_text)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
@bot.message_handler(commands=['start'])
def start_message(message):
    global menu_message_id
    if is_authorized(message.from_user):
        update_menu(message.chat.id, menu_message_id)
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.")

@bot.message_handler(commands=['ip'])
def ip_command(message):
    if is_authorized(message.from_user):
        get_ip()
    else:
        bot.send_message(message.chat.id, "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")

@bot.message_handler(commands=['screenshot'])
def screenshot_command(message):
    if is_authorized(message.from_user):
        take_screenshot()
    else:
        bot.send_message(message.chat.id, "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")

@bot.message_handler(commands=['sysinfo'])
def sysinfo_command(message):
    if is_authorized(message.from_user):
        get_sysinfo()
    else:
        bot.send_message(message.chat.id, "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")

@bot.message_handler(commands=['webcam'])
def webcam_command(message):
    if is_authorized(message.from_user):
        take_webcam_screenshot()
    else:
        bot.send_message(message.chat.id, "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")

@bot.message_handler(commands=['shutdown'])
def shutdown_command(message):
    if is_authorized(message.from_user):
        shutdown_computer()
    else:
        bot.send_message(message.chat.id, "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")

@bot.message_handler(commands=['wol'])
def wol_command(message):
    if is_authorized(message.from_user):
        wake_on_lan()
    else:
        bot.send_message(message.chat.id, "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")

@bot.message_handler(commands=['cmd'])
def cmd_command(message):
    global menu_message_id
    if is_authorized(message.from_user):
        command = message.text.split(' ', 1)[1] if len(message.text.split(' ', 1)) > 1 else ''
        if command:
            execute_cmd(command)
        else:
            try:
                bot.edit_message_text("üñ•Ô∏è –£–∫–∞–∂–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É, –Ω–∞–ø—Ä–∏–º–µ—Ä: /cmd dir", chat_id=message.chat.id, message_id=menu_message_id, reply_markup=get_back_button())
            except:
                sent_message = bot.send_message(message.chat.id, "üñ•Ô∏è –£–∫–∞–∂–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É, –Ω–∞–ø—Ä–∏–º–µ—Ä: /cmd dir", reply_markup=get_back_button())
                menu_message_id = sent_message.message_id
    else:
        bot.send_message(message.chat.id, "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")

@bot.message_handler(commands=['wallpaper'])
def wallpaper_command(message):
    global menu_message_id
    if is_authorized(message.from_user):
        url = message.text.split(' ', 1)[1] if len(message.text.split(' ', 1)) > 1 else ''
        if url:
            if not is_pc_available():
                bot.send_message(GROUP_ID, "‚ö†Ô∏è –ü–ö –≤—ã–∫–ª—é—á–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–∫–ª—é—á–∏—Ç—å —á–µ—Ä–µ–∑ /wol.")
                return
            set_wallpaper_from_url(url)
        elif message.photo:
            if not is_pc_available():
                bot.send_message(GROUP_ID, "‚ö†Ô∏è –ü–ö –≤—ã–∫–ª—é—á–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–∫–ª—é—á–∏—Ç—å —á–µ—Ä–µ–∑ /wol.")
                return
            try:
                file_info = bot.get_file(message.photo[-1].file_id)
                file = requests.get(f'https://api.telegram.org/file/bot{TOKEN}/{file_info.file_path}')
                with open('wallpaper.jpg', 'wb') as f:
                    f.write(file.content)
                set_wallpaper_from_file('wallpaper.jpg')
            except Exception as e:
                bot.send_message(GROUP_ID, f"üñºÔ∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –æ–±–æ–µ–≤: {e}")
        else:
            try:
                bot.edit_message_text("üñºÔ∏è –£–∫–∞–∂–∏—Ç–µ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: /wallpaper https://example.com/image.jpg) –∏–ª–∏ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.", chat_id=message.chat.id, message_id=menu_message_id, reply_markup=get_back_button())
            except:
                sent_message = bot.send_message(message.chat.id, "üñºÔ∏è –£–∫–∞–∂–∏—Ç–µ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: /wallpaper https://example.com/image.jpg) –∏–ª–∏ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.", reply_markup=get_back_button())
                menu_message_id = sent_message.message_id
    else:
        bot.send_message(message.chat.id, "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")

@bot.message_handler(commands=['open'])
def open_command(message):
    global menu_message_id
    if is_authorized(message.from_user):
        url = message.text.split(' ', 1)[1] if len(message.text.split(' ', 1)) > 1 else ''
        if url:
            open_url(url)
        else:
            try:
                bot.edit_message_text("üåê –£–∫–∞–∂–∏—Ç–µ URL, –Ω–∞–ø—Ä–∏–º–µ—Ä: /open https://google.com", chat_id=message.chat.id, message_id=menu_message_id, reply_markup=get_back_button())
            except:
                sent_message = bot.send_message(message.chat.id, "üåê –£–∫–∞–∂–∏—Ç–µ URL, –Ω–∞–ø—Ä–∏–º–µ—Ä: /open https://google.com", reply_markup=get_back_button())
                menu_message_id = sent_message.message_id
    else:
        bot.send_message(message.chat.id, "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")

@bot.message_handler(commands=['play'])
def play_command(message):
    global menu_message_id
    if is_authorized(message.from_user):
        url = message.text.split(' ', 1)[1] if len(message.text.split(' ', 1)) > 1 else ''
        if url:
            play_video(url)
        else:
            try:
                bot.edit_message_text("üé• –£–∫–∞–∂–∏—Ç–µ URL –≤–∏–¥–µ–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä: /play https://youtube.com/watch?v=video_id", chat_id=message.chat.id, message_id=menu_message_id, reply_markup=get_back_button())
            except:
                sent_message = bot.send_message(message.chat.id, "üé• –£–∫–∞–∂–∏—Ç–µ URL –≤–∏–¥–µ–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä: /play https://youtube.com/watch?v=video_id", reply_markup=get_back_button())
                menu_message_id = sent_message.message_id
    else:
        bot.send_message(message.chat.id, "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")

@bot.message_handler(commands=['dice'])
def dice_command(message):
    if is_authorized(message.from_user):
        roll_dice()
    else:
        bot.send_message(message.chat.id, "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫
@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    global menu_message_id
    if is_authorized(call.from_user):
        bot.answer_callback_query(call.id, "–ö–æ–º–∞–Ω–¥–∞ –ø—Ä–∏–Ω—è—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≥—Ä—É–ø–ø—É –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.")
        try:
            if call.data == 'cmd_ip':
                get_ip()
                bot.edit_message_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–º.", chat_id=call.message.chat.id, message_id=menu_message_id, reply_markup=get_main_menu())
            elif call.data == 'cmd_screenshot':
                take_screenshot()
                bot.edit_message_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–º.", chat_id=call.message.chat.id, message_id=menu_message_id, reply_markup=get_main_menu())
            elif call.data == 'cmd_sysinfo':
                get_sysinfo()
                bot.edit_message_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–º.", chat_id=call.message.chat.id, message_id=menu_message_id, reply_markup=get_main_menu())
            elif call.data == 'cmd_webcam':
                take_webcam_screenshot()
                bot.edit_message_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–º.", chat_id=call.message.chat.id, message_id=menu_message_id, reply_markup=get_main_menu())
            elif call.data == 'cmd_shutdown':
                shutdown_computer()
                bot.edit_message_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–º.", chat_id=call.message.chat.id, message_id=menu_message_id, reply_markup=get_main_menu())
            elif call.data == 'cmd_wol':
                wake_on_lan()
                bot.edit_message_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–º.", chat_id=call.message.chat.id, message_id=menu_message_id, reply_markup=get_main_menu())
            elif call.data == 'cmd_cmd':
                bot.edit_message_text("üñ•Ô∏è –£–∫–∞–∂–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É, –Ω–∞–ø—Ä–∏–º–µ—Ä: /cmd dir", chat_id=call.message.chat.id, message_id=menu_message_id, reply_markup=get_back_button())
            elif call.data == 'cmd_wallpaper':
                bot.edit_message_text("üñºÔ∏è –£–∫–∞–∂–∏—Ç–µ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: /wallpaper https://example.com/image.jpg) –∏–ª–∏ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.", chat_id=call.message.chat.id, message_id=menu_message_id, reply_markup=get_back_button())
            elif call.data == 'cmd_open':
                bot.edit_message_text("üåê –£–∫–∞–∂–∏—Ç–µ URL, –Ω–∞–ø—Ä–∏–º–µ—Ä: /open https://google.com", chat_id=call.message.chat.id, message_id=menu_message_id, reply_markup=get_back_button())
            elif call.data == 'cmd_play':
                bot.edit_message_text("üé• –£–∫–∞–∂–∏—Ç–µ URL –≤–∏–¥–µ–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä: /play https://youtube.com/watch?v=video_id", chat_id=call.message.chat.id, message_id=menu_message_id, reply_markup=get_back_button())
            elif call.data == 'cmd_dice':
                roll_dice()
                bot.edit_message_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–º.", chat_id=call.message.chat.id, message_id=menu_message_id, reply_markup=get_main_menu())
            elif call.data == 'cmd_help':
                send_help()
                bot.edit_message_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–º.", chat_id=call.message.chat.id, message_id=menu_message_id, reply_markup=get_main_menu())
            elif call.data == 'cmd_back':
                bot.edit_message_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–º.", chat_id=call.message.chat.id, message_id=menu_message_id, reply_markup=get_main_menu())
        except Exception as e:
            update_menu(call.message.chat.id)
    else:
        bot.answer_callback_query(call.id, "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling()